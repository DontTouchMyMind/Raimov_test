Тестовое задание №1.

Напишите алгоритм полного обхода дерева (связный граф, не содержащий циклы). Дерево представлено в виде словаря.



Тестовое задание №2.

Напишите веб-сервис, который принимает JSON-данные через REST-API, вычисляет выражение (formula) , и отправляет результат обратно.
В случае ошибки - отправляет текстовое описание ошибки. Данные, которые принимает веб-сервис:

{
    "rangeEnd": "2020-09-06T00:00:00",
    "rangeStart": "2020-09-02T00:00:00",
    "graphs": [
        {
            "formula": "CPULoad5min*10"
        }
    ],
    "df": {
        "CPULoad5min": {
            "index": [
                "2020-09-02T00:01:49",
                "2020-09-02T00:06:37",
                "2020-09-02T00:11:36",
                "2020-09-02T00:16:54",
                "2020-09-02T00:21:35",
                "2020-09-02T00:26:32"
            ],
            "values": [
                123,
                112,
                78,
                111,
                111,
                95
            ]
        }
    }
}
CPULoad5min это pandas DataFrame.

Плюсом будет:

а) преобразовать в серию

б) выполнить операцию передискретизации с частотой 1 секунда

в) интерполировать результат полиномом 3-го порядка





Тестовое задание №3.

Используя библиотеку pygments, напишите лексер, который разбирает текст:

options {

  allow-new-zones true;

}

на токены, с учетом пунктуации и вложенности, используя следующую JSON-схему:

{
    "options": {
        "$id": 10001,
        "$type": "object",
        "$requried": false,
        "$anyOf": {
            "allow-new-zones": {
                "$id": 10002,
                "$regex": [
                    "^(true|false)$"
                ],
                "$type": "boolean",
                "$requried": false
            }
        }
    }
}
